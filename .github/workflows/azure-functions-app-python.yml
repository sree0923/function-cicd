
name: CICD for Azure Function App

on:
  push:
    # branches: ["main"]
env:
 # set this to the path to your function app project, defaults to the repository root
  PYTHON_VERSION: '3.9' 
  FORCE_JAVASCRIPT_ACTIONS_TO_NODE20 : true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: build
    strategy:
      matrix:
        app:
          - name: "fn-cicd-dev1"
            folder: "fn-dev1"	
          - name: "fn-cicd-dev2"
            folder: "fn-dev2"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  
      - name: Check if folder has changes
        id: check_changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q "^${{ matrix.app.folder }}/"; then
            echo "Folder ${{ matrix.app.folder }} has changes."
            echo "deploy=true" >> $GITHUB_ENV
          else  
            echo "No changes in ${{ matrix.app.folder }}."
            echo "deploy=false" >> $GITHUB_ENV 
          fi    
   
      - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
  
      - name: 'Resolve Project Dependencies Using Pip'
        if: env.deploy == 'true'
        shell: bash
        run: |
          cd ${{ matrix.app.folder }}
          python -m pip install --upgrade pip
          pip install -r requirements.txt --target=".python_packages/lib/site-packages"

      - name: Debug List files in folder
        # if: env.deploy == 'true'
        run: |
         cd ${{ matrix.app.folder }}
         ls -la          

      - name: Create ZIP package
        # if: env.deploy == 'true'
        run: |
          cd ${{ matrix.app.folder }}
          zip -r ./${{ matrix.app.folder }}.zip .

      - name: List files after ZIP creation
        # if: env.deploy == 'true'
        run: ls -R 

      - name:  Check ZIP File
        # if: env.deploy == 'true'
        run: |
          ls -la ./
          file ./${{ matrix.app.folder }}.zip                 

      - name: Upload build artifact
        # if: env.deploy == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app.folder }}-build
          path: ./${{ matrix.app.folder }}/${{ matrix.app.folder }}.zip

#   build-and-deploy-dev:
#     runs-on: ubuntu-latest
#     needs: build
#     environment: dev
#     env:
#  # set this to the path to your function app project, defaults to the repository root
#      PYTHON_VERSION: '3.9' 
#      FORCE_JAVASCRIPT_ACTIONS_TO_NODE20 : true
#     strategy:
#       matrix:
#         app:
#           - name: "fn-cicd-dev1"
#             folder: "fn-dev1"	
#           - name: "fn-cicd-dev2"
#             folder: "fn-dev2"

#     steps:  
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Download build artifact
#         # if: env.deploy == 'true'
#         uses: actions/download-artifact@v4
#         with:
#           name: ${{ matrix.app.folder }}-build
#           # path: ./${{ matrix.app.folder }}.zip

#       - name:  Verify ZIP file
#         run: ls -la ./

#       - name: Unzip artifact for deployment
#         # if: env.deploy == 'true'
#         run: unzip -o ${{ matrix.app.folder }}.zip
        
#       - name:  Verify ZIP file
#         run: ls -la ./      

#       - name: 'Login via Azure CLI'
#         # if: env.deploy == 'true'
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}  

#       - name: Deploy to Azure Function App
#         # if: env.deploy == 'true'
#         uses: azure/functions-action@v1
#         with:
#           app-name: ${{ matrix.app.name }}
#           # package: ./${{ matrix.app.folder }}.zip
#           package: '.'
#           scm-do-build-during-deployment: true
#           enable-oryx-build: true

#   build-and-deploy-qa:
#     runs-on: ubuntu-latest
#     needs: build-and-deploy-dev
#     environment: qa
#     strategy:
#       matrix:
#         app:
#           - name: "fn-cicd-qa1"
#             folder: "fn-dev1"	
#           - name: "fn-cicd-qa2"
#             folder: "fn-dev2"

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Download build artifact
#         # if: env.deploy == 'true'
#         uses: actions/download-artifact@v4
#         with:
#           name: ${{ matrix.app.folder }}-build
#           # path: ./${{ matrix.app.folder }}.zip

#       - name:  Verify ZIP file
#         run: ls -la ./

#       - name: Unzip artifact for deployment
#         # if: env.deploy == 'true'
#         run: unzip -o ${{ matrix.app.folder }}.zip
        
#       - name:  Verify ZIP file
#         run: ls -la ./      

#       - name: 'Login via Azure CLI'
#         # if: env.deploy == 'true'
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}  

#       - name: Deploy to Azure Function App
#         # if: env.deploy == 'true'
#         uses: azure/functions-action@v1
#         with:
#           app-name: ${{ matrix.app.name }}
#           # package: ./${{ matrix.app.folder }}.zip
#           package: '.'
#           scm-do-build-during-deployment: true
#           enable-oryx-build: true        

#   build-and-deploy-prod:
#     runs-on: ubuntu-latest
#     needs: build-and-deploy-qa
#     environment: prod
#     strategy:
#       matrix:
#         app:
#           - name: "fn-cicd-prod1"
#             folder: "fn-dev1"	
#           - name: "fn-cicd-prod2"
#             folder: "fn-dev2"

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Download build artifact
#         # if: env.deploy == 'true'
#         uses: actions/download-artifact@v4
#         with:
#           name: ${{ matrix.app.folder }}-build
#           # path: ./${{ matrix.app.folder }}.zip

#       - name:  Verify ZIP file
#         run: ls -la ./

#       - name: Unzip artifact for deployment
#         # if: env.deploy == 'true'
#         run: unzip -o ${{ matrix.app.folder }}.zip
        
#       - name:  Verify ZIP file
#         run: ls -la ./      

#       - name: 'Login via Azure CLI'
#         # if: env.deploy == 'true'
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}  

#       - name: Deploy to Azure Function App
#         # if: env.deploy == 'true'
#         uses: azure/functions-action@v1
#         with:
#           app-name: ${{ matrix.app.name }}
#           # package: ./${{ matrix.app.folder }}.zip
#           package: '.'
#           scm-do-build-during-deployment: true
#           enable-oryx-build: true 
          
         



