
name: CICD for Azure Function App

on:
  push:
    branches:
      - "feature/**"
      - develop
      - qa
      - main
      - 'release/*'
  pull_request:
    branches:
      - develop
      - qa
      - main
      - 'release/*' 
env:
  PYTHON_VERSION: '3.9' 
  FORCE_JAVASCRIPT_ACTIONS_TO_NODE20 : true

jobs: 
  generate-matrix:
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # - name: Determine Environment
      #   id: determine-env
      #   run: |
      #     if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
      #       echo "env=dev" >> $GITHUB_ENV
      #     elif [[ "${{ github.ref }}" == "refs/heads/qa" ]]; then
      #       echo "env=qa" >> $GITHUB_ENV
      #     elif [[ "${{ github.ref }}" == refs/heads/release/* ]]; then
      #       echo "env=staging" >> $GITHUB_ENV
      #     elif [[ "${{ github.ref }}" == refs/heads/prod ]]; then
      #       echo "env=prod" >> $GITHUB_ENV            
      #     else
      #       echo "Unknown branch; exiting."
      #       exit 1
      #     fi 
      
      - name: Determine Environment
        id: determine-env
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Determine the base branch of the PR
            branch="${{ github.base_ref }}"
            echo "Detected PR from branch: $branch"
          else
            # Use the branch from the push or other events
            branch="${{ github.ref }}" 
            branch="${branch#refs/heads/}"
            echo "Detected branch: $branch"
          fi
      
          # Map branch to environment
          if [[ "$branch" == "develop" ]]; then
            echo "env=dev" >> $GITHUB_ENV
          elif [[ "$branch" == "qa" ]]; then
            echo "env=qa" >> $GITHUB_ENV
          elif [[ "$branch" == release/* ]]; then
            echo "env=staging" >> $GITHUB_ENV
          elif [[ "$branch" == "prod" ]]; then
            echo "env=prod" >> $GITHUB_ENV
          else
            echo "Unknown branch: $branch; exiting."
            exit 1
          fi
          
      - name: Read JSON and Generate Matrix for ${{ env.env }}
        id: set-matrix
        run: |
          MATRIX=$(jq -c ".${{ env.env }}" app.json)
          echo "Generated MATRIX: $MATRIX"
          echo "::set-output name=matrix::$MATRIX"
      - name: Log Generated Matrix
        run: |
          echo "Matrix: ${{ steps.set-matrix.outputs.matrix }}"

  deploy-dev:
    uses: sree0923/function-cicd/.github/workflows/deploy-template.yml@develop  # Reference the reusable workflow at the job level
    secrets:
      azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}
    needs: generate-matrix
    if: github.ref == 'refs/heads/develop' 
    strategy:
      matrix:          
       app: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
      fail-fast: false   
    with:
      app-name: ${{ matrix.app.name }}
      app-folder: ${{ matrix.app.folder }}
      environment: develop
     
  deploy-qa:
    uses: sree0923/function-cicd/.github/workflows/deploy-template.yml@develop  # Reference the reusable workflow at the job level
    secrets:
      azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}
    # runs-on: ubuntu-latest
    needs: generate-matrix
    if: github.ref == 'refs/heads/qa' 
    # environment: develop
    strategy:
      matrix:          
        app: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}  
    with:
      app-name: ${{ matrix.app.name }}
      app-folder: ${{ matrix.app.folder }}
      environment: qa

  deploy-prod:
    uses: sree0923/function-cicd/.github/workflows/deploy-template.yml@develop  # Reference the reusable workflow at the job level
    secrets:
      azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}
    # runs-on: ubuntu-latest
    needs: generate-matrix
    if: github.ref == 'refs/heads/qa' 
    # environment: develop
    strategy:
      matrix:          
        app: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}  
    with:
      app-name: ${{ matrix.app.name }}
      app-folder: ${{ matrix.app.folder }}
      environment: prod      
 
      # package: ./${{ matrix.app.folder }}  
    # steps:
    #   - name: Checkout repository
    #     uses: actions/checkout@v4
    #     with:
    #       fetch-depth: 0                     
    #   - name: Check if folder has changes
    #     id: check_changes
    #     run: |
    #       if git diff --name-only HEAD~1 HEAD | grep -q "^${{ matrix.app.folder }}/"; then
    #         echo "Folder ${{ matrix.app.folder }} has changes."
    #         echo "deploy=true" >> $GITHUB_ENV
    #       else  
    #         echo "No changes in ${{ matrix.app.folder }}."
    #         echo "deploy=false" >> $GITHUB_ENV 
    #       fi   
          
    #   - name: Skip Deployment if No Changes
    #     if: env.deploy == 'false'
    #     run: |
    #      echo "No changes detected in the folder. Skipping deployment."
    #      exit 0          
   
    #   - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
    #     if: env.deploy == 'true'
    #     uses: actions/setup-python@v4
    #     with:
    #       python-version: ${{ env.PYTHON_VERSION }}
  
    #   - name: 'Resolve Project Dependencies Using Pip'
    #     if: env.deploy == 'true'
    #     shell: bash
    #     run: |
    #       cd ${{ matrix.app.folder }}
    #       python -m pip install --upgrade pip
    #       pip install -r requirements.txt --target=".python_packages/lib/site-packages"

    #   - name: 'Login via Azure CLI'
    #     if: env.deploy == 'true'
    #     uses: azure/login@v1
    #     with:
    #       creds: ${{ secrets.AZURE_CREDENTIALS }}           

    #   - name: Deploy to Azure Function App on develop branch
    #     if: env.deploy == 'true'
    #     uses: azure/functions-action@v1
    #     with:
    #       app-name: ${{ matrix.app.name }}
    #       package: ./${{ matrix.app.folder }}
    #       scm-do-build-during-deployment: true
    #       enable-oryx-build: true   
          
  # deploy-qa:
  #   runs-on: ubuntu-latest
  #   needs: generate-matrix
  #   if: github.ref == 'refs/heads/qa'
  #   environment: qa
  #   strategy:
  #     matrix: 
  #       app: ${{ fromJson(needs.generate-matrix.outputs.matrix) }} 
    # steps:
    #   - name: Checkout repository
    #     uses: actions/checkout@v4
    #     with:
    #       fetch-depth: 0                     
    #   - name: Check if folder has changes
    #     id: check_changes
    #     run: |
    #       if git diff --name-only HEAD~1 HEAD | grep -q "^${{ matrix.app.folder }}/"; then
    #         echo "Folder ${{ matrix.app.folder }} has changes."
    #         echo "deploy=true" >> $GITHUB_ENV
    #       else  
    #         echo "No changes in ${{ matrix.app.folder }}."
    #         echo "deploy=false" >> $GITHUB_ENV 
    #       fi    
    
    #   - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
    #     if: env.deploy == 'true'
    #     uses: actions/setup-python@v4
    #     with:
    #       python-version: ${{ env.PYTHON_VERSION }}
  
    #   - name: 'Resolve Project Dependencies Using Pip'
    #     if: env.deploy == 'true'
    #     shell: bash
    #     run: |
    #       cd ${{ matrix.app.folder }}
    #       python -m pip install --upgrade pip
    #       pip install -r requirements.txt --target=".python_packages/lib/site-packages"

    #   - name: 'Login via Azure CLI'
    #     if: env.deploy == 'true'
    #     uses: azure/login@v1
    #     with:
    #       creds: ${{ secrets.AZURE_CREDENTIALS }}           

    #   - name: Deploy to Azure Function App on qa branch
    #     if: env.deploy == 'true'
    #     uses: azure/functions-action@v1
    #     with:
    #       app-name: ${{ matrix.app.name }}
    #       package: ./${{ matrix.app.folder }}
    #       scm-do-build-during-deployment: true
    #       enable-oryx-build: true 
          
  # deploy-prod:
  #   runs-on: ubuntu-latest
  #   needs: generate-matrix
  #   if: github.ref == 'refs/heads/prod'
  #   environment: prod
  #   strategy:
  #     matrix:          
  #       app: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}  
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0                     
  #     - name: Check if folder has changes
  #       id: check_changes
  #       run: |
  #         if git diff --name-only HEAD~1 HEAD | grep -q "^${{ matrix.app.folder }}/"; then
  #           echo "Folder ${{ matrix.app.folder }} has changes."
  #           echo "deploy=true" >> $GITHUB_ENV
  #         else  
  #           echo "No changes in ${{ matrix.app.folder }}."
  #           echo "deploy=false" >> $GITHUB_ENV 
  #         fi    
    
  #     - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
  #       if: env.deploy == 'true'
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}
  
  #     - name: 'Resolve Project Dependencies Using Pip'
  #       if: env.deploy == 'true'
  #       shell: bash
  #       run: |
  #         cd ${{ matrix.app.folder }}
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt --target=".python_packages/lib/site-packages"

  #     - name: 'Login via Azure CLI'
  #       if: env.deploy == 'true'
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}           

  #     - name: Deploy to Azure Function App on prod branch
  #       if: env.deploy == 'true'
  #       uses: azure/functions-action@v1
  #       with:
  #         app-name: ${{ matrix.app.name }}
  #         package: ./${{ matrix.app.folder }}
  #         scm-do-build-during-deployment: true
  #         enable-oryx-build: true             









         



